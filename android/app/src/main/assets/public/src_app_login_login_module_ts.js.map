{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBqB;AACR;AACgC;AACV;IASlD,SAAS,SAAT,SAAS;IAEpB,YACS,WAAkC,EAClC,MAAc,EACd,OAAyB;QAFzB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAkB;IAElC,CAAC;IAEK,QAAQ;;YACZ,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YACvD,IAAG,UAAU,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;aAClE;iBAAI;gBACH,OAAO,IAAI,CAAC;aACb;QACH,CAAC;KAAA;IAED,KAAK,CAAC,KAAK,EAAE,QAAQ;QACnB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC;aACjD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,IAAG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;gBACnC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;aAClE;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,CAAC;gBACzE,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,oBAAoB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YA1CQ,iFAAqB;YADrB,mDAAM;YAEN,uEAAgB;;AASZ,SAAS;IANrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GAEW,SAAS,CAgCrB;AAhCqB","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component,OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../shared/authentication.service';\nimport { UtilitiesService } from '../shared/utilities.service';\nimport { Tab1Page } from '../tab1/tab1.page';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\n\nexport class LoginPage implements OnInit {\n\n  constructor(\n    public authService: AuthenticationService,\n    public router: Router,\n    public utility: UtilitiesService\n  ) {\n  }\n\n  async ngOnInit() {\n    const isLoggedIn = await this.authService.isLoggedIn();\n    if(isLoggedIn ){\n      this.router.navigateByUrl('/tabs/tabs/tab1', {replaceUrl: true});\n    }else{\n      return true;\n    }\n  }\n\n  logIn(email, password) {\n    this.authService.SignIn(email.value, password.value)\n      .then((res) => {\n        if(this.authService.isEmailVerified) {\n          this.router.navigateByUrl('/tabs/tabs/tab1', {replaceUrl: true});\n        } else {\n          this.utility.presentAlert('Email Verification', 'Email is not verified');\n          return false;\n        }\n      }).catch((error) => {\n        this.utility.presentAlert('Email Verification', error.message);\n      });\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}